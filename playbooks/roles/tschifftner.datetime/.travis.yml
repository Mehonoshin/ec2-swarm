---
sudo: required
dist: trusty

language: python
python: "2.7"

env:
  - SITE=test.yml ANSIBLE_VERSION=latest
  - SITE=test.yml ANSIBLE_VERSION=2.1.0.0
  - SITE=test.yml ANSIBLE_VERSION=2.0.2.0
  - SITE=test.yml ANSIBLE_VERSION=2.0.1.0
  - SITE=test.yml ANSIBLE_VERSION=2.0.0.2
  - SITE=test.yml ANSIBLE_VERSION=2.0.0.1
  - SITE=test.yml ANSIBLE_VERSION=2.0.0.0

matrix:
  allow_failures:
    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.2
    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.1
    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.0

branches:
  only:
    - master

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y curl

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install --no-binary ansible ansible; else pip install --no-binary ansible ansible==$ANSIBLE_VERSION; fi

  # Add ansible.cfg to pick up roles path.
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

  # Install ansible-lint
  - pip install ansible-lint

script:
  # Check the role/playbook's syntax.
  - "ansible-playbook -i tests/inventory tests/$SITE --syntax-check"

  # Run the role/playbook with ansible-playbook.
  - "ansible-playbook -i tests/inventory tests/$SITE --connection=local --become"

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/$SITE --connection=local --become
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # ansible-lint checks for best practice
  - ansible-lint tests/$SITE

after_failure:
  - ansible --version
  - ansible -i 127.0.0.1, -m setup all -c local

notifications:
  slack: ambimax:2MlPTX9bY9aPxCPhJGxHKIT6
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
